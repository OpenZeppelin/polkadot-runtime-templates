[package]
name = "template-fuzzer"
version = "0.1.0"
[package.authors]
workspace = true
[package.description]
workspace = true
[package.edition]
workspace = true
[package.license]
workspace = true
[package.repository]
workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
substrate-runtime-fuzzer = { workspace = true }
ziggy = { workspace = true }

evm-runtime-template = { path = "../runtime" }
parachains-common = { workspace = true }

parity-scale-codec = { workspace = true }

frame-support = { workspace = true }
frame-system = { workspace = true }

sp-consensus-aura = { workspace = true }
sp-runtime = { workspace = true }
sp-state-machine = { workspace = true }

pallet-balances = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-scheduler = { workspace = true }
pallet-collator-selection = { workspace = true }
pallet-whitelist = { workspace = true }
pallet-multisig = { workspace = true }
pallet-utility = { workspace = true }
pallet-sudo = { workspace = true }

cumulus-pallet-parachain-system = { workspace = true }
cumulus-primitives-core = { workspace = true }
cumulus-primitives-parachain-inherent = { workspace = true }
cumulus-test-relay-sproof-builder = { workspace = true }

[features]
default = [ "std", "try-runtime" ]
std = [
	"evm-runtime-template/std",
	"frame-support/std",
	"pallet-timestamp/std",
	"pallet-scheduler/std",
	"pallet-collator-selection/std",
	"pallet-whitelist/std",
	"pallet-multisig/std",
	"pallet-utility/std",
	"pallet-sudo/std",
	"parity-scale-codec/std",
	"sp-consensus-aura/std",
	"sp-runtime/std",
]
try-runtime = [
	"evm-runtime-template/try-runtime",
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"pallet-scheduler/try-runtime",
	"pallet-collator-selection/try-runtime",
	"pallet-whitelist/try-runtime",
	"pallet-multisig/try-runtime",
	"pallet-utility/try-runtime",
	"pallet-sudo/try-runtime",
	"pallet-timestamp/try-runtime",
	"sp-runtime/try-runtime",
]

[lints]
workspace = true
